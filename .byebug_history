exit
@s1
continue
@s1
exit
continue
@s2.show
@s1.show
continue
@s1.show
exit
continue
@s1.remove_first
continue
@s1.remove_first
continue
@s1.remove_first
continue
@s1.remove_first
continue
@s1.remove_first
continue
@s1.remove_first
@s1
@s2.peek.nil?
!@s2.peek.nil?
continue
@s1
continue
@s1
exit
@s1
exit
@s2
@s1
exit
!!!
@s1
@s1.remove_first
exit
next
!
!!!
@s1
@s1.pop
exit
@s1
@s1.pop
@s1.peek.remove
@s1.show
exit
@s1.peek
exit
@s1.peek
return @s1
@s1.push(value)
!@s2.empty?
@s1.empty?
@se.empty?
exit
@s1
exit
@s2
!@s2.peek.nil?
@s1.push(value)
@s1.empty?
exit
!
!!!
@s2.pop
@s1.push(@s2.peek)
@s2.pop
@s1.push(@s2.peek)
exit
@s2.pop
@s1
@s2
@s1.push(@s2.peek)
exit
@s1
@s2
exit
@s1.push(@s2.peek)
@s2.peek.nil?
@s2
@s2.pop
@s1.push(@s2.peek)
@s2.peek
@s2
exit
@s2
@s1
exit
@s1.peek
@s1
exit
@s2.peek
@s1.peek
exit
@s1
exit
@s2.peek
exit
@s2.peek
exit
@s1.push(value).push(@s2)
v
@s1.push(value).push(@s2) if @s1.empty?
@s1.empty?
exit
@s1.push(value)e
@s1[1]
@s1.peek
exit
@s2.empty?
@2.empty?
@s1.empty?
@s1.empty?.nil?
if @s1.empty?.nil?
if @s1.empty?
